<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<!-- 配置数据源 -->
	<context:property-placeholder location="classpath:application.properties"/>

	<!--国际化-->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="${sys.language}"/>
		<property name="cookieName" value="language"/>
		<property name="cookieMaxAge" value="31536000"/>

	</bean>
	<bean id="className" class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<property name="interceptors">
			<list>
				<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
			</list>
		</property>
	</bean>


	<!-- 1 让拦截器,拦截细化到方法上. 自动注册:RequestMappingHandlerMapping,RequestMappingHandlerAdapter,ExceptionHandlerExceptionResolver -->
	<mvc:annotation-driven>
		<!-- 启用默认配置 Fastjson代替Jackson-->
		<mvc:message-converters register-defaults="true">
			<!-- 配置Fastjson支持 -->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>QuoteFieldNames</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>



	<!-- 2 启动注解扫描,扫描所有ctrl的包 -->
	<!-- 使用annotation 扫描 自动注册bean, 并保证@Required、@Autowired的属性被注入 ,<context:annotation-config/> 就可以被移除了-->
	<context:component-scan base-package="net.eoutech.webmin.**.ctrl,com.frame.**.ctrl" />


	<!-- 3 试图 前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- 4 spring mvc拦截器 -->
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<!--设置全局response-->
		<bean class="com.frame.commons.web.ResponseContextInterceptor"/>
	</mvc:interceptors>

	<!-- 5 配置Spring MVC 异常处理器,全局处理异常start, -->
	<bean id="exceptionResolver"
		  class="com.frame.commons.web.CustomSimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">/page/commons/error/500</prop>
				<prop key="java.lang.Throwable">/page/commons/error/500</prop>
				<!-- 这里还可以继续扩展对不同异常类型的处理 -->
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="/page/commons/error/500">500</prop>
			</props>
		</property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="/page/commons/error/500"/>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"/>
	</bean>
	<!-- 配置Spring MVC异常处理器,全局处理异常 end -->


	<!-- 6 spring任务调度器注解 -->
	<task:annotation-driven/>


</beans>
